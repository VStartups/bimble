<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="534" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="517.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="517.00"> </text><svg id="frames" x="10" width="1180" total_samples="206630413"><g><title>[as] (9,347,322 samples, 4.52%)</title><rect x="0.0000%" y="453" width="4.5237%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="9347322"/><text x="0.2500%" y="463.50">[as]</text></g><g><title>__libc_start_main (9,347,322 samples, 4.52%)</title><rect x="0.0000%" y="437" width="4.5237%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="9347322"/><text x="0.2500%" y="447.50">__lib..</text></g><g><title>[libc.so.6] (9,347,322 samples, 4.52%)</title><rect x="0.0000%" y="421" width="4.5237%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="9347322"/><text x="0.2500%" y="431.50">[libc..</text></g><g><title>[as] (9,347,322 samples, 4.52%)</title><rect x="0.0000%" y="405" width="4.5237%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="9347322"/><text x="0.2500%" y="415.50">[as]</text></g><g><title>xexit (9,347,322 samples, 4.52%)</title><rect x="0.0000%" y="389" width="4.5237%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="9347322"/><text x="0.2500%" y="399.50">xexit</text></g><g><title>[as] (9,347,322 samples, 4.52%)</title><rect x="0.0000%" y="373" width="4.5237%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="9347322"/><text x="0.2500%" y="383.50">[as]</text></g><g><title>[as] (9,347,322 samples, 4.52%)</title><rect x="0.0000%" y="357" width="4.5237%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="9347322"/><text x="0.2500%" y="367.50">[as]</text></g><g><title>cfree (9,347,322 samples, 4.52%)</title><rect x="0.0000%" y="341" width="4.5237%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="9347322"/><text x="0.2500%" y="351.50">cfree</text></g><g><title>[libc.so.6] (9,347,322 samples, 4.52%)</title><rect x="0.0000%" y="325" width="4.5237%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="9347322"/><text x="0.2500%" y="335.50">[libc..</text></g><g><title>[libc.so.6] (9,347,322 samples, 4.52%)</title><rect x="0.0000%" y="309" width="4.5237%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="9347322"/><text x="0.2500%" y="319.50">[libc..</text></g><g><title>as (14,929,731 samples, 7.23%)</title><rect x="0.0000%" y="469" width="7.2253%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="14929731"/><text x="0.2500%" y="479.50">as</text></g><g><title>[ld-linux-x86-64.so.2] (5,582,409 samples, 2.70%)</title><rect x="4.5237%" y="453" width="2.7016%" height="15" fill="rgb(240,193,28)" fg:x="9347322" fg:w="5582409"/><text x="4.7737%" y="463.50">[l..</text></g><g><title>[ld-linux-x86-64.so.2] (5,582,409 samples, 2.70%)</title><rect x="4.5237%" y="437" width="2.7016%" height="15" fill="rgb(216,20,37)" fg:x="9347322" fg:w="5582409"/><text x="4.7737%" y="447.50">[l..</text></g><g><title>[bimble] (18,845,757 samples, 9.12%)</title><rect x="7.2253%" y="453" width="9.1205%" height="15" fill="rgb(206,188,39)" fg:x="14929731" fg:w="18845757"/><text x="7.4753%" y="463.50">[bimble]</text></g><g><title>[bimble] (18,798,091 samples, 9.10%)</title><rect x="7.2484%" y="437" width="9.0974%" height="15" fill="rgb(217,207,13)" fg:x="14977397" fg:w="18798091"/><text x="7.4984%" y="447.50">[bimble]</text></g><g><title>[bimble] (18,071,585 samples, 8.75%)</title><rect x="7.6000%" y="421" width="8.7458%" height="15" fill="rgb(231,73,38)" fg:x="15703903" fg:w="18071585"/><text x="7.8500%" y="431.50">[bimble]</text></g><g><title>[bimble] (12,910,950 samples, 6.25%)</title><rect x="10.0975%" y="405" width="6.2483%" height="15" fill="rgb(225,20,46)" fg:x="20864538" fg:w="12910950"/><text x="10.3475%" y="415.50">[bimble]</text></g><g><title>[bimble] (10,143,215 samples, 4.91%)</title><rect x="11.4370%" y="389" width="4.9089%" height="15" fill="rgb(210,31,41)" fg:x="23632273" fg:w="10143215"/><text x="11.6870%" y="399.50">[bimbl..</text></g><g><title>[bimble] (9,321,186 samples, 4.51%)</title><rect x="11.8348%" y="373" width="4.5110%" height="15" fill="rgb(221,200,47)" fg:x="24454302" fg:w="9321186"/><text x="12.0848%" y="383.50">[bimb..</text></g><g><title>[bimble] (9,321,186 samples, 4.51%)</title><rect x="11.8348%" y="357" width="4.5110%" height="15" fill="rgb(226,26,5)" fg:x="24454302" fg:w="9321186"/><text x="12.0848%" y="367.50">[bimb..</text></g><g><title>[bimble] (9,321,186 samples, 4.51%)</title><rect x="11.8348%" y="341" width="4.5110%" height="15" fill="rgb(249,33,26)" fg:x="24454302" fg:w="9321186"/><text x="12.0848%" y="351.50">[bimb..</text></g><g><title>[bimble] (9,321,186 samples, 4.51%)</title><rect x="11.8348%" y="325" width="4.5110%" height="15" fill="rgb(235,183,28)" fg:x="24454302" fg:w="9321186"/><text x="12.0848%" y="335.50">[bimb..</text></g><g><title>[bimble] (9,321,186 samples, 4.51%)</title><rect x="11.8348%" y="309" width="4.5110%" height="15" fill="rgb(221,5,38)" fg:x="24454302" fg:w="9321186"/><text x="12.0848%" y="319.50">[bimb..</text></g><g><title>bimble (19,288,394 samples, 9.33%)</title><rect x="7.2253%" y="469" width="9.3347%" height="15" fill="rgb(247,18,42)" fg:x="14929731" fg:w="19288394"/><text x="7.4753%" y="479.50">bimble</text></g><g><title>[unknown] (442,637 samples, 0.21%)</title><rect x="16.3458%" y="453" width="0.2142%" height="15" fill="rgb(241,131,45)" fg:x="33775488" fg:w="442637"/><text x="16.5958%" y="463.50"></text></g><g><title>[bimble] (442,637 samples, 0.21%)</title><rect x="16.3458%" y="437" width="0.2142%" height="15" fill="rgb(249,31,29)" fg:x="33775488" fg:w="442637"/><text x="16.5958%" y="447.50"></text></g><g><title>[cc1] (4,308,680 samples, 2.09%)</title><rect x="16.5601%" y="245" width="2.0852%" height="15" fill="rgb(225,111,53)" fg:x="34218125" fg:w="4308680"/><text x="16.8101%" y="255.50">[..</text></g><g><title>[cc1] (4,308,680 samples, 2.09%)</title><rect x="16.5601%" y="229" width="2.0852%" height="15" fill="rgb(238,160,17)" fg:x="34218125" fg:w="4308680"/><text x="16.8101%" y="239.50">[..</text></g><g><title>c_parser_declspecs (4,308,680 samples, 2.09%)</title><rect x="16.5601%" y="213" width="2.0852%" height="15" fill="rgb(214,148,48)" fg:x="34218125" fg:w="4308680"/><text x="16.8101%" y="223.50">c..</text></g><g><title>[cc1] (4,308,680 samples, 2.09%)</title><rect x="16.5601%" y="197" width="2.0852%" height="15" fill="rgb(232,36,49)" fg:x="34218125" fg:w="4308680"/><text x="16.8101%" y="207.50">[..</text></g><g><title>c_lex_with_flags (4,308,680 samples, 2.09%)</title><rect x="16.5601%" y="181" width="2.0852%" height="15" fill="rgb(209,103,24)" fg:x="34218125" fg:w="4308680"/><text x="16.8101%" y="191.50">c..</text></g><g><title>[cc1] (4,308,680 samples, 2.09%)</title><rect x="16.5601%" y="165" width="2.0852%" height="15" fill="rgb(229,88,8)" fg:x="34218125" fg:w="4308680"/><text x="16.8101%" y="175.50">[..</text></g><g><title>_cpp_lex_token (4,308,680 samples, 2.09%)</title><rect x="16.5601%" y="149" width="2.0852%" height="15" fill="rgb(213,181,19)" fg:x="34218125" fg:w="4308680"/><text x="16.8101%" y="159.50">_..</text></g><g><title>_cpp_lex_direct (4,308,680 samples, 2.09%)</title><rect x="16.5601%" y="133" width="2.0852%" height="15" fill="rgb(254,191,54)" fg:x="34218125" fg:w="4308680"/><text x="16.8101%" y="143.50">_..</text></g><g><title>[cc1] (9,491,185 samples, 4.59%)</title><rect x="16.5601%" y="293" width="4.5933%" height="15" fill="rgb(241,83,37)" fg:x="34218125" fg:w="9491185"/><text x="16.8101%" y="303.50">[cc1]</text></g><g><title>[cc1] (9,491,185 samples, 4.59%)</title><rect x="16.5601%" y="277" width="4.5933%" height="15" fill="rgb(233,36,39)" fg:x="34218125" fg:w="9491185"/><text x="16.8101%" y="287.50">[cc1]</text></g><g><title>[cc1] (9,491,185 samples, 4.59%)</title><rect x="16.5601%" y="261" width="4.5933%" height="15" fill="rgb(226,3,54)" fg:x="34218125" fg:w="9491185"/><text x="16.8101%" y="271.50">[cc1]</text></g><g><title>c_finish_return (5,182,505 samples, 2.51%)</title><rect x="18.6453%" y="245" width="2.5081%" height="15" fill="rgb(245,192,40)" fg:x="38526805" fg:w="5182505"/><text x="18.8953%" y="255.50">c_..</text></g><g><title>[cc1] (5,182,505 samples, 2.51%)</title><rect x="18.6453%" y="229" width="2.5081%" height="15" fill="rgb(238,167,29)" fg:x="38526805" fg:w="5182505"/><text x="18.8953%" y="239.50">[c..</text></g><g><title>c_parser_declarator (4,049,334 samples, 1.96%)</title><rect x="21.1534%" y="293" width="1.9597%" height="15" fill="rgb(232,182,51)" fg:x="43709310" fg:w="4049334"/><text x="21.4034%" y="303.50">c..</text></g><g><title>[cc1] (4,049,334 samples, 1.96%)</title><rect x="21.1534%" y="277" width="1.9597%" height="15" fill="rgb(231,60,39)" fg:x="43709310" fg:w="4049334"/><text x="21.4034%" y="287.50">[..</text></g><g><title>[cc1] (4,049,334 samples, 1.96%)</title><rect x="21.1534%" y="261" width="1.9597%" height="15" fill="rgb(208,69,12)" fg:x="43709310" fg:w="4049334"/><text x="21.4034%" y="271.50">[..</text></g><g><title>[cc1] (4,049,334 samples, 1.96%)</title><rect x="21.1534%" y="245" width="1.9597%" height="15" fill="rgb(235,93,37)" fg:x="43709310" fg:w="4049334"/><text x="21.4034%" y="255.50">[..</text></g><g><title>[cc1] (4,049,334 samples, 1.96%)</title><rect x="21.1534%" y="229" width="1.9597%" height="15" fill="rgb(213,116,39)" fg:x="43709310" fg:w="4049334"/><text x="21.4034%" y="239.50">[..</text></g><g><title>c_parser_declarator (4,049,334 samples, 1.96%)</title><rect x="21.1534%" y="213" width="1.9597%" height="15" fill="rgb(222,207,29)" fg:x="43709310" fg:w="4049334"/><text x="21.4034%" y="223.50">c..</text></g><g><title>c_parser_declarator (4,049,334 samples, 1.96%)</title><rect x="21.1534%" y="197" width="1.9597%" height="15" fill="rgb(206,96,30)" fg:x="43709310" fg:w="4049334"/><text x="21.4034%" y="207.50">c..</text></g><g><title>c_parser_declspecs (4,049,334 samples, 1.96%)</title><rect x="21.1534%" y="181" width="1.9597%" height="15" fill="rgb(218,138,4)" fg:x="43709310" fg:w="4049334"/><text x="21.4034%" y="191.50">c..</text></g><g><title>[cc1] (4,049,334 samples, 1.96%)</title><rect x="21.1534%" y="165" width="1.9597%" height="15" fill="rgb(250,191,14)" fg:x="43709310" fg:w="4049334"/><text x="21.4034%" y="175.50">[..</text></g><g><title>c_lex_with_flags (4,049,334 samples, 1.96%)</title><rect x="21.1534%" y="149" width="1.9597%" height="15" fill="rgb(239,60,40)" fg:x="43709310" fg:w="4049334"/><text x="21.4034%" y="159.50">c..</text></g><g><title>[cc1] (4,049,334 samples, 1.96%)</title><rect x="21.1534%" y="133" width="1.9597%" height="15" fill="rgb(206,27,48)" fg:x="43709310" fg:w="4049334"/><text x="21.4034%" y="143.50">[..</text></g><g><title>_cpp_lex_token (4,049,334 samples, 1.96%)</title><rect x="21.1534%" y="117" width="1.9597%" height="15" fill="rgb(225,35,8)" fg:x="43709310" fg:w="4049334"/><text x="21.4034%" y="127.50">_..</text></g><g><title>_cpp_lex_direct (4,049,334 samples, 1.96%)</title><rect x="21.1534%" y="101" width="1.9597%" height="15" fill="rgb(250,213,24)" fg:x="43709310" fg:w="4049334"/><text x="21.4034%" y="111.50">_..</text></g><g><title>line_maps::get_or_create_combined_loc (4,049,334 samples, 1.96%)</title><rect x="21.1534%" y="85" width="1.9597%" height="15" fill="rgb(247,123,22)" fg:x="43709310" fg:w="4049334"/><text x="21.4034%" y="95.50">l..</text></g><g><title>linemap_lookup (4,049,334 samples, 1.96%)</title><rect x="21.1534%" y="69" width="1.9597%" height="15" fill="rgb(231,138,38)" fg:x="43709310" fg:w="4049334"/><text x="21.4034%" y="79.50">l..</text></g><g><title>[cc1] (18,043,475 samples, 8.73%)</title><rect x="16.5601%" y="309" width="8.7322%" height="15" fill="rgb(231,145,46)" fg:x="34218125" fg:w="18043475"/><text x="16.8101%" y="319.50">[cc1]</text></g><g><title>c_parser_declspecs (4,502,956 samples, 2.18%)</title><rect x="23.1131%" y="293" width="2.1792%" height="15" fill="rgb(251,118,11)" fg:x="47758644" fg:w="4502956"/><text x="23.3631%" y="303.50">c..</text></g><g><title>[cc1] (4,502,956 samples, 2.18%)</title><rect x="23.1131%" y="277" width="2.1792%" height="15" fill="rgb(217,147,25)" fg:x="47758644" fg:w="4502956"/><text x="23.3631%" y="287.50">[..</text></g><g><title>c_parser_declarator (4,502,956 samples, 2.18%)</title><rect x="23.1131%" y="261" width="2.1792%" height="15" fill="rgb(247,81,37)" fg:x="47758644" fg:w="4502956"/><text x="23.3631%" y="271.50">c..</text></g><g><title>[cc1] (4,502,956 samples, 2.18%)</title><rect x="23.1131%" y="245" width="2.1792%" height="15" fill="rgb(209,12,38)" fg:x="47758644" fg:w="4502956"/><text x="23.3631%" y="255.50">[..</text></g><g><title>c_parser_peek_nth_token (4,502,956 samples, 2.18%)</title><rect x="23.1131%" y="229" width="2.1792%" height="15" fill="rgb(227,1,9)" fg:x="47758644" fg:w="4502956"/><text x="23.3631%" y="239.50">c..</text></g><g><title>[cc1] (4,502,956 samples, 2.18%)</title><rect x="23.1131%" y="213" width="2.1792%" height="15" fill="rgb(248,47,43)" fg:x="47758644" fg:w="4502956"/><text x="23.3631%" y="223.50">[..</text></g><g><title>c_lex_with_flags (4,502,956 samples, 2.18%)</title><rect x="23.1131%" y="197" width="2.1792%" height="15" fill="rgb(221,10,30)" fg:x="47758644" fg:w="4502956"/><text x="23.3631%" y="207.50">c..</text></g><g><title>[cc1] (4,502,956 samples, 2.18%)</title><rect x="23.1131%" y="181" width="2.1792%" height="15" fill="rgb(210,229,1)" fg:x="47758644" fg:w="4502956"/><text x="23.3631%" y="191.50">[..</text></g><g><title>[cc1] (4,502,956 samples, 2.18%)</title><rect x="23.1131%" y="165" width="2.1792%" height="15" fill="rgb(222,148,37)" fg:x="47758644" fg:w="4502956"/><text x="23.3631%" y="175.50">[..</text></g><g><title>_cpp_get_buff (4,502,956 samples, 2.18%)</title><rect x="23.1131%" y="149" width="2.1792%" height="15" fill="rgb(234,67,33)" fg:x="47758644" fg:w="4502956"/><text x="23.3631%" y="159.50">_..</text></g><g><title>malloc (4,502,956 samples, 2.18%)</title><rect x="23.1131%" y="133" width="2.1792%" height="15" fill="rgb(247,98,35)" fg:x="47758644" fg:w="4502956"/><text x="23.3631%" y="143.50">m..</text></g><g><title>[libc.so.6] (4,502,956 samples, 2.18%)</title><rect x="23.1131%" y="117" width="2.1792%" height="15" fill="rgb(247,138,52)" fg:x="47758644" fg:w="4502956"/><text x="23.3631%" y="127.50">[..</text></g><g><title>[libc.so.6] (4,502,956 samples, 2.18%)</title><rect x="23.1131%" y="101" width="2.1792%" height="15" fill="rgb(213,79,30)" fg:x="47758644" fg:w="4502956"/><text x="23.3631%" y="111.50">[..</text></g><g><title>[cc1] (6,232,897 samples, 3.02%)</title><rect x="25.2923%" y="229" width="3.0164%" height="15" fill="rgb(246,177,23)" fg:x="52261600" fg:w="6232897"/><text x="25.5423%" y="239.50">[cc..</text></g><g><title>_cpp_lex_token (6,232,897 samples, 3.02%)</title><rect x="25.2923%" y="213" width="3.0164%" height="15" fill="rgb(230,62,27)" fg:x="52261600" fg:w="6232897"/><text x="25.5423%" y="223.50">_cp..</text></g><g><title>_cpp_lex_direct (6,232,897 samples, 3.02%)</title><rect x="25.2923%" y="197" width="3.0164%" height="15" fill="rgb(216,154,8)" fg:x="52261600" fg:w="6232897"/><text x="25.5423%" y="207.50">_cp..</text></g><g><title>[cc1] (6,232,897 samples, 3.02%)</title><rect x="25.2923%" y="181" width="3.0164%" height="15" fill="rgb(244,35,45)" fg:x="52261600" fg:w="6232897"/><text x="25.5423%" y="191.50">[cc..</text></g><g><title>ht_lookup_with_hash (6,232,897 samples, 3.02%)</title><rect x="25.2923%" y="165" width="3.0164%" height="15" fill="rgb(251,115,12)" fg:x="52261600" fg:w="6232897"/><text x="25.5423%" y="175.50">ht_..</text></g><g><title>[cc1] (6,232,897 samples, 3.02%)</title><rect x="25.2923%" y="149" width="3.0164%" height="15" fill="rgb(240,54,50)" fg:x="52261600" fg:w="6232897"/><text x="25.5423%" y="159.50">[cc..</text></g><g><title>make_node (6,232,897 samples, 3.02%)</title><rect x="25.2923%" y="133" width="3.0164%" height="15" fill="rgb(233,84,52)" fg:x="52261600" fg:w="6232897"/><text x="25.5423%" y="143.50">mak..</text></g><g><title>ggc_internal_alloc (6,232,897 samples, 3.02%)</title><rect x="25.2923%" y="117" width="3.0164%" height="15" fill="rgb(207,117,47)" fg:x="52261600" fg:w="6232897"/><text x="25.5423%" y="127.50">ggc..</text></g><g><title>htab_find_slot_with_hash (4,900,754 samples, 2.37%)</title><rect x="28.3088%" y="197" width="2.3717%" height="15" fill="rgb(249,43,39)" fg:x="58494497" fg:w="4900754"/><text x="28.5588%" y="207.50">ht..</text></g><g><title>[cc1] (4,900,754 samples, 2.37%)</title><rect x="28.3088%" y="181" width="2.3717%" height="15" fill="rgb(209,38,44)" fg:x="58494497" fg:w="4900754"/><text x="28.5588%" y="191.50">[c..</text></g><g><title>htab_hash_string (4,900,754 samples, 2.37%)</title><rect x="28.3088%" y="165" width="2.3717%" height="15" fill="rgb(236,212,23)" fg:x="58494497" fg:w="4900754"/><text x="28.5588%" y="175.50">ht..</text></g><g><title>c_common_parse_file (36,344,869 samples, 17.59%)</title><rect x="16.5601%" y="357" width="17.5893%" height="15" fill="rgb(242,79,21)" fg:x="34218125" fg:w="36344869"/><text x="16.8101%" y="367.50">c_common_parse_file</text></g><g><title>c_parse_file (36,344,869 samples, 17.59%)</title><rect x="16.5601%" y="341" width="17.5893%" height="15" fill="rgb(211,96,35)" fg:x="34218125" fg:w="36344869"/><text x="16.8101%" y="351.50">c_parse_file</text></g><g><title>[cc1] (36,344,869 samples, 17.59%)</title><rect x="16.5601%" y="325" width="17.5893%" height="15" fill="rgb(253,215,40)" fg:x="34218125" fg:w="36344869"/><text x="16.8101%" y="335.50">[cc1]</text></g><g><title>c_lex_with_flags (18,301,394 samples, 8.86%)</title><rect x="25.2923%" y="309" width="8.8571%" height="15" fill="rgb(211,81,21)" fg:x="52261600" fg:w="18301394"/><text x="25.5423%" y="319.50">c_lex_with_fl..</text></g><g><title>[cc1] (18,301,394 samples, 8.86%)</title><rect x="25.2923%" y="293" width="8.8571%" height="15" fill="rgb(208,190,38)" fg:x="52261600" fg:w="18301394"/><text x="25.5423%" y="303.50">[cc1]</text></g><g><title>_cpp_lex_token (18,301,394 samples, 8.86%)</title><rect x="25.2923%" y="277" width="8.8571%" height="15" fill="rgb(235,213,38)" fg:x="52261600" fg:w="18301394"/><text x="25.5423%" y="287.50">_cpp_lex_token</text></g><g><title>_cpp_handle_directive (18,301,394 samples, 8.86%)</title><rect x="25.2923%" y="261" width="8.8571%" height="15" fill="rgb(237,122,38)" fg:x="52261600" fg:w="18301394"/><text x="25.5423%" y="271.50">_cpp_handle_d..</text></g><g><title>[cc1] (18,301,394 samples, 8.86%)</title><rect x="25.2923%" y="245" width="8.8571%" height="15" fill="rgb(244,218,35)" fg:x="52261600" fg:w="18301394"/><text x="25.5423%" y="255.50">[cc1]</text></g><g><title>_cpp_stack_include (12,068,497 samples, 5.84%)</title><rect x="28.3088%" y="229" width="5.8406%" height="15" fill="rgb(240,68,47)" fg:x="58494497" fg:w="12068497"/><text x="28.5588%" y="239.50">_cpp_st..</text></g><g><title>_cpp_find_file (12,068,497 samples, 5.84%)</title><rect x="28.3088%" y="213" width="5.8406%" height="15" fill="rgb(210,16,53)" fg:x="58494497" fg:w="12068497"/><text x="28.5588%" y="223.50">_cpp_fi..</text></g><g><title>lrealpath (7,167,743 samples, 3.47%)</title><rect x="30.6805%" y="197" width="3.4689%" height="15" fill="rgb(235,124,12)" fg:x="63395251" fg:w="7167743"/><text x="30.9305%" y="207.50">lre..</text></g><g><title>readlink (7,167,743 samples, 3.47%)</title><rect x="30.6805%" y="181" width="3.4689%" height="15" fill="rgb(224,169,11)" fg:x="63395251" fg:w="7167743"/><text x="30.9305%" y="191.50">rea..</text></g><g><title>[cc1] (3,578,209 samples, 1.73%)</title><rect x="34.1494%" y="261" width="1.7317%" height="15" fill="rgb(250,166,2)" fg:x="70562994" fg:w="3578209"/><text x="34.3994%" y="271.50"></text></g><g><title>execute_one_pass (3,578,209 samples, 1.73%)</title><rect x="34.1494%" y="245" width="1.7317%" height="15" fill="rgb(242,216,29)" fg:x="70562994" fg:w="3578209"/><text x="34.3994%" y="255.50"></text></g><g><title>[cc1] (3,578,209 samples, 1.73%)</title><rect x="34.1494%" y="229" width="1.7317%" height="15" fill="rgb(230,116,27)" fg:x="70562994" fg:w="3578209"/><text x="34.3994%" y="239.50"></text></g><g><title>[cc1] (3,578,209 samples, 1.73%)</title><rect x="34.1494%" y="213" width="1.7317%" height="15" fill="rgb(228,99,48)" fg:x="70562994" fg:w="3578209"/><text x="34.3994%" y="223.50"></text></g><g><title>schedule_block (3,578,209 samples, 1.73%)</title><rect x="34.1494%" y="197" width="1.7317%" height="15" fill="rgb(253,11,6)" fg:x="70562994" fg:w="3578209"/><text x="34.3994%" y="207.50"></text></g><g><title>[cc1] (3,578,209 samples, 1.73%)</title><rect x="34.1494%" y="181" width="1.7317%" height="15" fill="rgb(247,143,39)" fg:x="70562994" fg:w="3578209"/><text x="34.3994%" y="191.50"></text></g><g><title>execute_pass_list (7,196,876 samples, 3.48%)</title><rect x="34.1494%" y="309" width="3.4830%" height="15" fill="rgb(236,97,10)" fg:x="70562994" fg:w="7196876"/><text x="34.3994%" y="319.50">exe..</text></g><g><title>[cc1] (7,196,876 samples, 3.48%)</title><rect x="34.1494%" y="293" width="3.4830%" height="15" fill="rgb(233,208,19)" fg:x="70562994" fg:w="7196876"/><text x="34.3994%" y="303.50">[cc..</text></g><g><title>[cc1] (7,196,876 samples, 3.48%)</title><rect x="34.1494%" y="277" width="3.4830%" height="15" fill="rgb(216,164,2)" fg:x="70562994" fg:w="7196876"/><text x="34.3994%" y="287.50">[cc..</text></g><g><title>execute_one_pass (3,618,667 samples, 1.75%)</title><rect x="35.8811%" y="261" width="1.7513%" height="15" fill="rgb(220,129,5)" fg:x="74141203" fg:w="3618667"/><text x="36.1311%" y="271.50"></text></g><g><title>[cc1] (3,618,667 samples, 1.75%)</title><rect x="35.8811%" y="245" width="1.7513%" height="15" fill="rgb(242,17,10)" fg:x="74141203" fg:w="3618667"/><text x="36.1311%" y="255.50"></text></g><g><title>[cc1] (3,618,667 samples, 1.75%)</title><rect x="35.8811%" y="229" width="1.7513%" height="15" fill="rgb(242,107,0)" fg:x="74141203" fg:w="3618667"/><text x="36.1311%" y="239.50"></text></g><g><title>rtl_ssa::function_info::function_info (3,618,667 samples, 1.75%)</title><rect x="35.8811%" y="213" width="1.7513%" height="15" fill="rgb(251,28,31)" fg:x="74141203" fg:w="3618667"/><text x="36.1311%" y="223.50"></text></g><g><title>rtl_ssa::function_info::process_all_blocks (3,618,667 samples, 1.75%)</title><rect x="35.8811%" y="197" width="1.7513%" height="15" fill="rgb(233,223,10)" fg:x="74141203" fg:w="3618667"/><text x="36.1311%" y="207.50"></text></g><g><title>dom_walker::walk (3,618,667 samples, 1.75%)</title><rect x="35.8811%" y="181" width="1.7513%" height="15" fill="rgb(215,21,27)" fg:x="74141203" fg:w="3618667"/><text x="36.1311%" y="191.50"></text></g><g><title>rtl_ssa::function_info::bb_walker::before_dom_children (3,618,667 samples, 1.75%)</title><rect x="35.8811%" y="165" width="1.7513%" height="15" fill="rgb(232,23,21)" fg:x="74141203" fg:w="3618667"/><text x="36.1311%" y="175.50"></text></g><g><title>rtl_ssa::function_info::start_block (3,618,667 samples, 1.75%)</title><rect x="35.8811%" y="149" width="1.7513%" height="15" fill="rgb(244,5,23)" fg:x="74141203" fg:w="3618667"/><text x="36.1311%" y="159.50"></text></g><g><title>rtl_ssa::function_info::add_artificial_accesses (3,618,667 samples, 1.75%)</title><rect x="35.8811%" y="133" width="1.7513%" height="15" fill="rgb(226,81,46)" fg:x="74141203" fg:w="3618667"/><text x="36.1311%" y="143.50"></text></g><g><title>init_expmed (3,825,976 samples, 1.85%)</title><rect x="37.6323%" y="293" width="1.8516%" height="15" fill="rgb(247,70,30)" fg:x="77759870" fg:w="3825976"/><text x="37.8823%" y="303.50">i..</text></g><g><title>[cc1] (3,825,976 samples, 1.85%)</title><rect x="37.6323%" y="277" width="1.8516%" height="15" fill="rgb(212,68,19)" fg:x="77759870" fg:w="3825976"/><text x="37.8823%" y="287.50">[..</text></g><g><title>rtx_cost (3,825,976 samples, 1.85%)</title><rect x="37.6323%" y="261" width="1.8516%" height="15" fill="rgb(240,187,13)" fg:x="77759870" fg:w="3825976"/><text x="37.8823%" y="271.50">r..</text></g><g><title>rtx_cost (3,825,976 samples, 1.85%)</title><rect x="37.6323%" y="245" width="1.8516%" height="15" fill="rgb(223,113,26)" fg:x="77759870" fg:w="3825976"/><text x="37.8823%" y="255.50">r..</text></g><g><title>[cc1] (3,714,527 samples, 1.80%)</title><rect x="39.4839%" y="277" width="1.7977%" height="15" fill="rgb(206,192,2)" fg:x="81585846" fg:w="3714527"/><text x="39.7339%" y="287.50">[..</text></g><g><title>cgraph_node::expand (22,038,054 samples, 10.67%)</title><rect x="34.1494%" y="325" width="10.6654%" height="15" fill="rgb(241,108,4)" fg:x="70562994" fg:w="22038054"/><text x="34.3994%" y="335.50">cgraph_node::exp..</text></g><g><title>initialize_rtl (14,841,178 samples, 7.18%)</title><rect x="37.6323%" y="309" width="7.1825%" height="15" fill="rgb(247,173,49)" fg:x="77759870" fg:w="14841178"/><text x="37.8823%" y="319.50">initialize..</text></g><g><title>ira_init (11,015,202 samples, 5.33%)</title><rect x="39.4839%" y="293" width="5.3309%" height="15" fill="rgb(224,114,35)" fg:x="81585846" fg:w="11015202"/><text x="39.7339%" y="303.50">ira_init</text></g><g><title>ira_init_register_move_cost (7,300,675 samples, 3.53%)</title><rect x="41.2816%" y="277" width="3.5332%" height="15" fill="rgb(245,159,27)" fg:x="85300373" fg:w="7300675"/><text x="41.5316%" y="287.50">ira..</text></g><g><title>[cc1] (62,311,741 samples, 30.16%)</title><rect x="16.5601%" y="373" width="30.1561%" height="15" fill="rgb(245,172,44)" fg:x="34218125" fg:w="62311741"/><text x="16.8101%" y="383.50">[cc1]</text></g><g><title>symbol_table::finalize_compilation_unit (25,966,872 samples, 12.57%)</title><rect x="34.1494%" y="357" width="12.5668%" height="15" fill="rgb(236,23,11)" fg:x="70562994" fg:w="25966872"/><text x="34.3994%" y="367.50">symbol_table::final..</text></g><g><title>[cc1] (25,966,872 samples, 12.57%)</title><rect x="34.1494%" y="341" width="12.5668%" height="15" fill="rgb(205,117,38)" fg:x="70562994" fg:w="25966872"/><text x="34.3994%" y="351.50">[cc1]</text></g><g><title>execute_ipa_pass_list (3,928,818 samples, 1.90%)</title><rect x="44.8148%" y="325" width="1.9014%" height="15" fill="rgb(237,72,25)" fg:x="92601048" fg:w="3928818"/><text x="45.0648%" y="335.50">e..</text></g><g><title>execute_one_pass (3,928,818 samples, 1.90%)</title><rect x="44.8148%" y="309" width="1.9014%" height="15" fill="rgb(244,70,9)" fg:x="92601048" fg:w="3928818"/><text x="45.0648%" y="319.50">e..</text></g><g><title>[cc1] (3,928,818 samples, 1.90%)</title><rect x="44.8148%" y="293" width="1.9014%" height="15" fill="rgb(217,125,39)" fg:x="92601048" fg:w="3928818"/><text x="45.0648%" y="303.50">[..</text></g><g><title>c_objc_common_init (7,757,588 samples, 3.75%)</title><rect x="46.7162%" y="373" width="3.7543%" height="15" fill="rgb(235,36,10)" fg:x="96529866" fg:w="7757588"/><text x="46.9662%" y="383.50">c_ob..</text></g><g><title>c_init_decl_processing (7,757,588 samples, 3.75%)</title><rect x="46.7162%" y="357" width="3.7543%" height="15" fill="rgb(251,123,47)" fg:x="96529866" fg:w="7757588"/><text x="46.9662%" y="367.50">c_in..</text></g><g><title>c_common_nodes_and_builtins (7,757,588 samples, 3.75%)</title><rect x="46.7162%" y="341" width="3.7543%" height="15" fill="rgb(221,13,13)" fg:x="96529866" fg:w="7757588"/><text x="46.9662%" y="351.50">c_co..</text></g><g><title>[cc1] (7,757,588 samples, 3.75%)</title><rect x="46.7162%" y="325" width="3.7543%" height="15" fill="rgb(238,131,9)" fg:x="96529866" fg:w="7757588"/><text x="46.9662%" y="335.50">[cc1]</text></g><g><title>[cc1] (7,757,588 samples, 3.75%)</title><rect x="46.7162%" y="309" width="3.7543%" height="15" fill="rgb(211,50,8)" fg:x="96529866" fg:w="7757588"/><text x="46.9662%" y="319.50">[cc1]</text></g><g><title>[cc1] (7,757,588 samples, 3.75%)</title><rect x="46.7162%" y="293" width="3.7543%" height="15" fill="rgb(245,182,24)" fg:x="96529866" fg:w="7757588"/><text x="46.9662%" y="303.50">[cc1]</text></g><g><title>decl_attributes (7,757,588 samples, 3.75%)</title><rect x="46.7162%" y="277" width="3.7543%" height="15" fill="rgb(242,14,37)" fg:x="96529866" fg:w="7757588"/><text x="46.9662%" y="287.50">decl..</text></g><g><title>_start (78,471,933 samples, 37.98%)</title><rect x="16.5601%" y="453" width="37.9770%" height="15" fill="rgb(246,228,12)" fg:x="34218125" fg:w="78471933"/><text x="16.8101%" y="463.50">_start</text></g><g><title>__libc_start_main (78,471,933 samples, 37.98%)</title><rect x="16.5601%" y="437" width="37.9770%" height="15" fill="rgb(213,55,15)" fg:x="34218125" fg:w="78471933"/><text x="16.8101%" y="447.50">__libc_start_main</text></g><g><title>[libc.so.6] (78,471,933 samples, 37.98%)</title><rect x="16.5601%" y="421" width="37.9770%" height="15" fill="rgb(209,9,3)" fg:x="34218125" fg:w="78471933"/><text x="16.8101%" y="431.50">[libc.so.6]</text></g><g><title>main (78,471,933 samples, 37.98%)</title><rect x="16.5601%" y="405" width="37.9770%" height="15" fill="rgb(230,59,30)" fg:x="34218125" fg:w="78471933"/><text x="16.8101%" y="415.50">main</text></g><g><title>toplev::main (78,471,933 samples, 37.98%)</title><rect x="16.5601%" y="389" width="37.9770%" height="15" fill="rgb(209,121,21)" fg:x="34218125" fg:w="78471933"/><text x="16.8101%" y="399.50">toplev::main</text></g><g><title>init_ttree (8,402,604 samples, 4.07%)</title><rect x="50.4705%" y="373" width="4.0665%" height="15" fill="rgb(220,109,13)" fg:x="104287454" fg:w="8402604"/><text x="50.7205%" y="383.50">init..</text></g><g><title>cc1 (84,277,604 samples, 40.79%)</title><rect x="16.5601%" y="469" width="40.7866%" height="15" fill="rgb(232,18,1)" fg:x="34218125" fg:w="84277604"/><text x="16.8101%" y="479.50">cc1</text></g><g><title>type_hash_canon (5,805,671 samples, 2.81%)</title><rect x="54.5370%" y="453" width="2.8097%" height="15" fill="rgb(215,41,42)" fg:x="112690058" fg:w="5805671"/><text x="54.7870%" y="463.50">ty..</text></g><g><title>[collect2] (285,635 samples, 0.14%)</title><rect x="57.3467%" y="453" width="0.1382%" height="15" fill="rgb(224,123,36)" fg:x="118495729" fg:w="285635"/><text x="57.5967%" y="463.50"></text></g><g><title>__libc_start_main (285,635 samples, 0.14%)</title><rect x="57.3467%" y="437" width="0.1382%" height="15" fill="rgb(240,125,3)" fg:x="118495729" fg:w="285635"/><text x="57.5967%" y="447.50"></text></g><g><title>[libc.so.6] (285,635 samples, 0.14%)</title><rect x="57.3467%" y="421" width="0.1382%" height="15" fill="rgb(205,98,50)" fg:x="118495729" fg:w="285635"/><text x="57.5967%" y="431.50"></text></g><g><title>[collect2] (285,635 samples, 0.14%)</title><rect x="57.3467%" y="405" width="0.1382%" height="15" fill="rgb(205,185,37)" fg:x="118495729" fg:w="285635"/><text x="57.5967%" y="415.50"></text></g><g><title>[collect2] (285,635 samples, 0.14%)</title><rect x="57.3467%" y="389" width="0.1382%" height="15" fill="rgb(238,207,15)" fg:x="118495729" fg:w="285635"/><text x="57.5967%" y="399.50"></text></g><g><title>[collect2] (285,635 samples, 0.14%)</title><rect x="57.3467%" y="373" width="0.1382%" height="15" fill="rgb(213,199,42)" fg:x="118495729" fg:w="285635"/><text x="57.5967%" y="383.50"></text></g><g><title>[collect2] (285,635 samples, 0.14%)</title><rect x="57.3467%" y="357" width="0.1382%" height="15" fill="rgb(235,201,11)" fg:x="118495729" fg:w="285635"/><text x="57.5967%" y="367.50"></text></g><g><title>posix_spawnp (285,635 samples, 0.14%)</title><rect x="57.3467%" y="341" width="0.1382%" height="15" fill="rgb(207,46,11)" fg:x="118495729" fg:w="285635"/><text x="57.5967%" y="351.50"></text></g><g><title>[libc.so.6] (285,635 samples, 0.14%)</title><rect x="57.3467%" y="325" width="0.1382%" height="15" fill="rgb(241,35,35)" fg:x="118495729" fg:w="285635"/><text x="57.5967%" y="335.50"></text></g><g><title>[libc.so.6] (285,635 samples, 0.14%)</title><rect x="57.3467%" y="309" width="0.1382%" height="15" fill="rgb(243,32,47)" fg:x="118495729" fg:w="285635"/><text x="57.5967%" y="319.50"></text></g><g><title>__munmap (285,635 samples, 0.14%)</title><rect x="57.3467%" y="293" width="0.1382%" height="15" fill="rgb(247,202,23)" fg:x="118495729" fg:w="285635"/><text x="57.5967%" y="303.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2,295,873 samples, 1.11%)</title><rect x="57.4849%" y="453" width="1.1111%" height="15" fill="rgb(219,102,11)" fg:x="118781364" fg:w="2295873"/><text x="57.7349%" y="463.50"></text></g><g><title>collect2 (3,103,821 samples, 1.50%)</title><rect x="57.3467%" y="469" width="1.5021%" height="15" fill="rgb(243,110,44)" fg:x="118495729" fg:w="3103821"/><text x="57.5967%" y="479.50"></text></g><g><title>[libc.so.6] (522,313 samples, 0.25%)</title><rect x="58.5960%" y="453" width="0.2528%" height="15" fill="rgb(222,74,54)" fg:x="121077237" fg:w="522313"/><text x="58.8460%" y="463.50"></text></g><g><title>[gcc] (8,670,764 samples, 4.20%)</title><rect x="58.8488%" y="453" width="4.1963%" height="15" fill="rgb(216,99,12)" fg:x="121599550" fg:w="8670764"/><text x="59.0988%" y="463.50">[gcc]</text></g><g><title>__libc_start_main (8,670,764 samples, 4.20%)</title><rect x="58.8488%" y="437" width="4.1963%" height="15" fill="rgb(226,22,26)" fg:x="121599550" fg:w="8670764"/><text x="59.0988%" y="447.50">__lib..</text></g><g><title>[libc.so.6] (8,670,764 samples, 4.20%)</title><rect x="58.8488%" y="421" width="4.1963%" height="15" fill="rgb(217,163,10)" fg:x="121599550" fg:w="8670764"/><text x="59.0988%" y="431.50">[libc..</text></g><g><title>[gcc] (8,670,764 samples, 4.20%)</title><rect x="58.8488%" y="405" width="4.1963%" height="15" fill="rgb(213,25,53)" fg:x="121599550" fg:w="8670764"/><text x="59.0988%" y="415.50">[gcc]</text></g><g><title>[gcc] (8,670,764 samples, 4.20%)</title><rect x="58.8488%" y="389" width="4.1963%" height="15" fill="rgb(252,105,26)" fg:x="121599550" fg:w="8670764"/><text x="59.0988%" y="399.50">[gcc]</text></g><g><title>[gcc] (8,670,764 samples, 4.20%)</title><rect x="58.8488%" y="373" width="4.1963%" height="15" fill="rgb(220,39,43)" fg:x="121599550" fg:w="8670764"/><text x="59.0988%" y="383.50">[gcc]</text></g><g><title>[gcc] (8,670,764 samples, 4.20%)</title><rect x="58.8488%" y="357" width="4.1963%" height="15" fill="rgb(229,68,48)" fg:x="121599550" fg:w="8670764"/><text x="59.0988%" y="367.50">[gcc]</text></g><g><title>[gcc] (8,670,764 samples, 4.20%)</title><rect x="58.8488%" y="341" width="4.1963%" height="15" fill="rgb(252,8,32)" fg:x="121599550" fg:w="8670764"/><text x="59.0988%" y="351.50">[gcc]</text></g><g><title>[gcc] (8,670,764 samples, 4.20%)</title><rect x="58.8488%" y="325" width="4.1963%" height="15" fill="rgb(223,20,43)" fg:x="121599550" fg:w="8670764"/><text x="59.0988%" y="335.50">[gcc]</text></g><g><title>[gcc] (8,670,764 samples, 4.20%)</title><rect x="58.8488%" y="309" width="4.1963%" height="15" fill="rgb(229,81,49)" fg:x="121599550" fg:w="8670764"/><text x="59.0988%" y="319.50">[gcc]</text></g><g><title>[gcc] (8,670,764 samples, 4.20%)</title><rect x="58.8488%" y="293" width="4.1963%" height="15" fill="rgb(236,28,36)" fg:x="121599550" fg:w="8670764"/><text x="59.0988%" y="303.50">[gcc]</text></g><g><title>[gcc] (8,670,764 samples, 4.20%)</title><rect x="58.8488%" y="277" width="4.1963%" height="15" fill="rgb(249,185,26)" fg:x="121599550" fg:w="8670764"/><text x="59.0988%" y="287.50">[gcc]</text></g><g><title>[gcc] (8,670,764 samples, 4.20%)</title><rect x="58.8488%" y="261" width="4.1963%" height="15" fill="rgb(249,174,33)" fg:x="121599550" fg:w="8670764"/><text x="59.0988%" y="271.50">[gcc]</text></g><g><title>[gcc] (8,670,764 samples, 4.20%)</title><rect x="58.8488%" y="245" width="4.1963%" height="15" fill="rgb(233,201,37)" fg:x="121599550" fg:w="8670764"/><text x="59.0988%" y="255.50">[gcc]</text></g><g><title>[gcc] (8,670,764 samples, 4.20%)</title><rect x="58.8488%" y="229" width="4.1963%" height="15" fill="rgb(221,78,26)" fg:x="121599550" fg:w="8670764"/><text x="59.0988%" y="239.50">[gcc]</text></g><g><title>[gcc] (8,670,764 samples, 4.20%)</title><rect x="58.8488%" y="213" width="4.1963%" height="15" fill="rgb(250,127,30)" fg:x="121599550" fg:w="8670764"/><text x="59.0988%" y="223.50">[gcc]</text></g><g><title>[gcc] (8,670,764 samples, 4.20%)</title><rect x="58.8488%" y="197" width="4.1963%" height="15" fill="rgb(230,49,44)" fg:x="121599550" fg:w="8670764"/><text x="59.0988%" y="207.50">[gcc]</text></g><g><title>[gcc] (8,670,764 samples, 4.20%)</title><rect x="58.8488%" y="181" width="4.1963%" height="15" fill="rgb(229,67,23)" fg:x="121599550" fg:w="8670764"/><text x="59.0988%" y="191.50">[gcc]</text></g><g><title>[gcc] (8,670,764 samples, 4.20%)</title><rect x="58.8488%" y="165" width="4.1963%" height="15" fill="rgb(249,83,47)" fg:x="121599550" fg:w="8670764"/><text x="59.0988%" y="175.50">[gcc]</text></g><g><title>[gcc] (8,670,764 samples, 4.20%)</title><rect x="58.8488%" y="149" width="4.1963%" height="15" fill="rgb(215,43,3)" fg:x="121599550" fg:w="8670764"/><text x="59.0988%" y="159.50">[gcc]</text></g><g><title>[gcc] (8,670,764 samples, 4.20%)</title><rect x="58.8488%" y="133" width="4.1963%" height="15" fill="rgb(238,154,13)" fg:x="121599550" fg:w="8670764"/><text x="59.0988%" y="143.50">[gcc]</text></g><g><title>[gcc] (8,670,764 samples, 4.20%)</title><rect x="58.8488%" y="117" width="4.1963%" height="15" fill="rgb(219,56,2)" fg:x="121599550" fg:w="8670764"/><text x="59.0988%" y="127.50">[gcc]</text></g><g><title>[gcc] (8,670,764 samples, 4.20%)</title><rect x="58.8488%" y="101" width="4.1963%" height="15" fill="rgb(233,0,4)" fg:x="121599550" fg:w="8670764"/><text x="59.0988%" y="111.50">[gcc]</text></g><g><title>[gcc] (8,670,764 samples, 4.20%)</title><rect x="58.8488%" y="85" width="4.1963%" height="15" fill="rgb(235,30,7)" fg:x="121599550" fg:w="8670764"/><text x="59.0988%" y="95.50">[gcc]</text></g><g><title>[gcc] (8,670,764 samples, 4.20%)</title><rect x="58.8488%" y="69" width="4.1963%" height="15" fill="rgb(250,79,13)" fg:x="121599550" fg:w="8670764"/><text x="59.0988%" y="79.50">[gcc]</text></g><g><title>[gcc] (8,670,764 samples, 4.20%)</title><rect x="58.8488%" y="53" width="4.1963%" height="15" fill="rgb(211,146,34)" fg:x="121599550" fg:w="8670764"/><text x="59.0988%" y="63.50">[gcc]</text></g><g><title>[gcc] (8,670,764 samples, 4.20%)</title><rect x="58.8488%" y="37" width="4.1963%" height="15" fill="rgb(228,22,38)" fg:x="121599550" fg:w="8670764"/><text x="59.0988%" y="47.50">[gcc]</text></g><g><title>[ld-linux-x86-64.so.2] (4,839,389 samples, 2.34%)</title><rect x="63.0451%" y="453" width="2.3421%" height="15" fill="rgb(235,168,5)" fg:x="130270314" fg:w="4839389"/><text x="63.2951%" y="463.50">[..</text></g><g><title>gcc (14,040,359 samples, 6.79%)</title><rect x="58.8488%" y="469" width="6.7949%" height="15" fill="rgb(221,155,16)" fg:x="121599550" fg:w="14040359"/><text x="59.0988%" y="479.50">gcc</text></g><g><title>[libc.so.6] (530,206 samples, 0.26%)</title><rect x="65.3871%" y="453" width="0.2566%" height="15" fill="rgb(215,215,53)" fg:x="135109703" fg:w="530206"/><text x="65.6371%" y="463.50"></text></g><g><title>[ld-linux-x86-64.so.2] (15,978,220 samples, 7.73%)</title><rect x="65.6437%" y="453" width="7.7328%" height="15" fill="rgb(223,4,10)" fg:x="135639909" fg:w="15978220"/><text x="65.8937%" y="463.50">[ld-linux-x..</text></g><g><title>[ld-linux-x86-64.so.2] (15,934,316 samples, 7.71%)</title><rect x="65.6650%" y="437" width="7.7115%" height="15" fill="rgb(234,103,6)" fg:x="135683813" fg:w="15934316"/><text x="65.9150%" y="447.50">[ld-linux-x..</text></g><g><title>[ld-linux-x86-64.so.2] (15,934,316 samples, 7.71%)</title><rect x="65.6650%" y="421" width="7.7115%" height="15" fill="rgb(227,97,0)" fg:x="135683813" fg:w="15934316"/><text x="65.9150%" y="431.50">[ld-linux-x..</text></g><g><title>[ld-linux-x86-64.so.2] (15,934,316 samples, 7.71%)</title><rect x="65.6650%" y="405" width="7.7115%" height="15" fill="rgb(234,150,53)" fg:x="135683813" fg:w="15934316"/><text x="65.9150%" y="415.50">[ld-linux-x..</text></g><g><title>[ld-linux-x86-64.so.2] (14,287,760 samples, 6.91%)</title><rect x="66.4618%" y="389" width="6.9146%" height="15" fill="rgb(228,201,54)" fg:x="137330369" fg:w="14287760"/><text x="66.7118%" y="399.50">[ld-linux..</text></g><g><title>[ld-linux-x86-64.so.2] (14,287,760 samples, 6.91%)</title><rect x="66.4618%" y="373" width="6.9146%" height="15" fill="rgb(222,22,37)" fg:x="137330369" fg:w="14287760"/><text x="66.7118%" y="383.50">[ld-linux..</text></g><g><title>[ld] (24,820,236 samples, 12.01%)</title><rect x="73.3765%" y="357" width="12.0119%" height="15" fill="rgb(237,53,32)" fg:x="151618129" fg:w="24820236"/><text x="73.6265%" y="367.50">[ld]</text></g><g><title>[ld] (24,820,236 samples, 12.01%)</title><rect x="73.3765%" y="341" width="12.0119%" height="15" fill="rgb(233,25,53)" fg:x="151618129" fg:w="24820236"/><text x="73.6265%" y="351.50">[ld]</text></g><g><title>bfd_elf_link_add_symbols (24,820,236 samples, 12.01%)</title><rect x="73.3765%" y="325" width="12.0119%" height="15" fill="rgb(210,40,34)" fg:x="151618129" fg:w="24820236"/><text x="73.6265%" y="335.50">bfd_elf_link_add_s..</text></g><g><title>[libbfd-2.43.0.so] (14,192,817 samples, 6.87%)</title><rect x="78.5197%" y="309" width="6.8687%" height="15" fill="rgb(241,220,44)" fg:x="162245548" fg:w="14192817"/><text x="78.7697%" y="319.50">[libbfd-2..</text></g><g><title>[ld] (34,442,520 samples, 16.67%)</title><rect x="73.3765%" y="389" width="16.6687%" height="15" fill="rgb(235,28,35)" fg:x="151618129" fg:w="34442520"/><text x="73.6265%" y="399.50">[ld]</text></g><g><title>[ld] (34,442,520 samples, 16.67%)</title><rect x="73.3765%" y="373" width="16.6687%" height="15" fill="rgb(210,56,17)" fg:x="151618129" fg:w="34442520"/><text x="73.6265%" y="383.50">[ld]</text></g><g><title>bfd_elf_size_dynamic_sections (9,622,284 samples, 4.66%)</title><rect x="85.3884%" y="357" width="4.6568%" height="15" fill="rgb(224,130,29)" fg:x="176438365" fg:w="9622284"/><text x="85.6384%" y="367.50">bfd_e..</text></g><g><title>bfd_link_hash_traverse (9,622,284 samples, 4.66%)</title><rect x="85.3884%" y="341" width="4.6568%" height="15" fill="rgb(235,212,8)" fg:x="176438365" fg:w="9622284"/><text x="85.6384%" y="351.50">bfd_l..</text></g><g><title>bfd_close (11,550,325 samples, 5.59%)</title><rect x="90.0451%" y="389" width="5.5898%" height="15" fill="rgb(223,33,50)" fg:x="186060649" fg:w="11550325"/><text x="90.2951%" y="399.50">bfd_clo..</text></g><g><title>_bfd_elf_write_object_contents (11,550,325 samples, 5.59%)</title><rect x="90.0451%" y="373" width="5.5898%" height="15" fill="rgb(219,149,13)" fg:x="186060649" fg:w="11550325"/><text x="90.2951%" y="383.50">_bfd_el..</text></g><g><title>[ld] (11,550,325 samples, 5.59%)</title><rect x="90.0451%" y="357" width="5.5898%" height="15" fill="rgb(250,156,29)" fg:x="186060649" fg:w="11550325"/><text x="90.2951%" y="367.50">[ld]</text></g><g><title>[ld] (11,550,325 samples, 5.59%)</title><rect x="90.0451%" y="341" width="5.5898%" height="15" fill="rgb(216,193,19)" fg:x="186060649" fg:w="11550325"/><text x="90.2951%" y="351.50">[ld]</text></g><g><title>bfd_elf64_checksum_contents (11,550,325 samples, 5.59%)</title><rect x="90.0451%" y="325" width="5.5898%" height="15" fill="rgb(216,135,14)" fg:x="186060649" fg:w="11550325"/><text x="90.2951%" y="335.50">bfd_elf..</text></g><g><title>[libbfd-2.43.0.so] (11,550,325 samples, 5.59%)</title><rect x="90.0451%" y="309" width="5.5898%" height="15" fill="rgb(241,47,5)" fg:x="186060649" fg:w="11550325"/><text x="90.2951%" y="319.50">[libbfd..</text></g><g><title>bfd_get_full_section_contents (11,550,325 samples, 5.59%)</title><rect x="90.0451%" y="293" width="5.5898%" height="15" fill="rgb(233,42,35)" fg:x="186060649" fg:w="11550325"/><text x="90.2951%" y="303.50">bfd_get..</text></g><g><title>[libbfd-2.43.0.so] (11,550,325 samples, 5.59%)</title><rect x="90.0451%" y="277" width="5.5898%" height="15" fill="rgb(231,13,6)" fg:x="186060649" fg:w="11550325"/><text x="90.2951%" y="287.50">[libbfd..</text></g><g><title>bfd_read (11,550,325 samples, 5.59%)</title><rect x="90.0451%" y="261" width="5.5898%" height="15" fill="rgb(207,181,40)" fg:x="186060649" fg:w="11550325"/><text x="90.2951%" y="271.50">bfd_read</text></g><g><title>[libbfd-2.43.0.so] (11,550,325 samples, 5.59%)</title><rect x="90.0451%" y="245" width="5.5898%" height="15" fill="rgb(254,173,49)" fg:x="186060649" fg:w="11550325"/><text x="90.2951%" y="255.50">[libbfd..</text></g><g><title>_IO_fread (11,550,325 samples, 5.59%)</title><rect x="90.0451%" y="229" width="5.5898%" height="15" fill="rgb(221,1,38)" fg:x="186060649" fg:w="11550325"/><text x="90.2951%" y="239.50">_IO_fre..</text></g><g><title>[libc.so.6] (11,550,325 samples, 5.59%)</title><rect x="90.0451%" y="213" width="5.5898%" height="15" fill="rgb(206,124,46)" fg:x="186060649" fg:w="11550325"/><text x="90.2951%" y="223.50">[libc.s..</text></g><g><title>[libbfd-2.43.0.so] (873,761 samples, 0.42%)</title><rect x="95.6350%" y="373" width="0.4229%" height="15" fill="rgb(249,21,11)" fg:x="197610974" fg:w="873761"/><text x="95.8850%" y="383.50"></text></g><g><title>bfd_hash_traverse (873,761 samples, 0.42%)</title><rect x="95.6350%" y="357" width="0.4229%" height="15" fill="rgb(222,201,40)" fg:x="197610974" fg:w="873761"/><text x="95.8850%" y="367.50"></text></g><g><title>[libbfd-2.43.0.so] (849,874 samples, 0.41%)</title><rect x="95.6465%" y="341" width="0.4113%" height="15" fill="rgb(235,61,29)" fg:x="197634861" fg:w="849874"/><text x="95.8965%" y="351.50"></text></g><g><title>all (206,630,413 samples, 100%)</title><rect x="0.0000%" y="485" width="100.0000%" height="15" fill="rgb(219,207,3)" fg:x="0" fg:w="206630413"/><text x="0.2500%" y="495.50"></text></g><g><title>ld (70,990,504 samples, 34.36%)</title><rect x="65.6437%" y="469" width="34.3563%" height="15" fill="rgb(222,56,46)" fg:x="135639909" fg:w="70990504"/><text x="65.8937%" y="479.50">ld</text></g><g><title>[ld] (55,012,284 samples, 26.62%)</title><rect x="73.3765%" y="453" width="26.6235%" height="15" fill="rgb(239,76,54)" fg:x="151618129" fg:w="55012284"/><text x="73.6265%" y="463.50">[ld]</text></g><g><title>__libc_start_main (55,012,284 samples, 26.62%)</title><rect x="73.3765%" y="437" width="26.6235%" height="15" fill="rgb(231,124,27)" fg:x="151618129" fg:w="55012284"/><text x="73.6265%" y="447.50">__libc_start_main</text></g><g><title>[libc.so.6] (55,012,284 samples, 26.62%)</title><rect x="73.3765%" y="421" width="26.6235%" height="15" fill="rgb(249,195,6)" fg:x="151618129" fg:w="55012284"/><text x="73.6265%" y="431.50">[libc.so.6]</text></g><g><title>[ld] (55,012,284 samples, 26.62%)</title><rect x="73.3765%" y="405" width="26.6235%" height="15" fill="rgb(237,174,47)" fg:x="151618129" fg:w="55012284"/><text x="73.6265%" y="415.50">[ld]</text></g><g><title>bfd_elf_final_link (9,019,439 samples, 4.37%)</title><rect x="95.6350%" y="389" width="4.3650%" height="15" fill="rgb(206,201,31)" fg:x="197610974" fg:w="9019439"/><text x="95.8850%" y="399.50">bfd_e..</text></g><g><title>bfd_hash_traverse (8,145,678 samples, 3.94%)</title><rect x="96.0579%" y="373" width="3.9421%" height="15" fill="rgb(231,57,52)" fg:x="198484735" fg:w="8145678"/><text x="96.3079%" y="383.50">bfd_..</text></g><g><title>[libbfd-2.43.0.so] (8,145,678 samples, 3.94%)</title><rect x="96.0579%" y="357" width="3.9421%" height="15" fill="rgb(248,177,22)" fg:x="198484735" fg:w="8145678"/><text x="96.3079%" y="367.50">[lib..</text></g></svg></svg>